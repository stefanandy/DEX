{
  "contractName": "Factory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "exchange",
          "type": "address"
        }
      ],
      "name": "NewExchange",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "createExchange",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getExchange",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "ticker",
          "type": "string"
        }
      ],
      "name": "getExchangesByTicker",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "ticker",
          "type": "string"
        }
      ],
      "name": "getTickerTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"exchange\",\"type\":\"address\"}],\"name\":\"NewExchange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"createExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"ticker\",\"type\":\"string\"}],\"name\":\"getExchangesByTicker\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"ticker\",\"type\":\"string\"}],\"name\":\"getTickerTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Ethereum/dex/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Ethereum/dex/contracts/DEX.sol\":{\"keccak256\":\"0x74220e9b2b15306036eb02b16648603963c06fc8f58c998aa6fcc8c10b890852\",\"urls\":[\"bzz-raw://9e5c7c70e498fe4b711e7c3714f0602b7cfbb020e818e64bb6f982728b71d9ce\",\"dweb:/ipfs/QmcoKmFA3Kt66GocqRgQoC8RDNXXypUbbvvZGbAb56gDWv\"]},\"/C/Ethereum/dex/contracts/Factory.sol\":{\"keccak256\":\"0x0ee04e1a9c92b422c51a6ed8207e630af9f57d26646f8c7592270966bebf2d8d\",\"urls\":[\"bzz-raw://d64c6caad0c46f0f510b6dd91f376a4acf6873ae09fdc6a89b87eee7b80de02f\",\"dweb:/ipfs/QmesvrJwxijQCmD3mv4pktDDxaucCyveKgyrFWbZFdLVkL\"]},\"/C/Ethereum/dex/contracts/IDEX.sol\":{\"keccak256\":\"0x21cf5d779128366dc5d37822dce78233790c0593d0cedf36f504f17bf6426a88\",\"urls\":[\"bzz-raw://ca46c5a165bbb5dd8677353926cc82b00d034c8ce94e68096e21aa32c00fca9b\",\"dweb:/ipfs/QmXytYC6GAuMEB3Z2RWC6nDeAnWe7D1mPTCCnSPpdhJz4N\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612127806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306f2bf62146100515780631648f38e146100815780631dae17e5146100b157806393bffd8e146100e1575b600080fd5b61006b6004803603810190610066919061086f565b610111565b6040516100789190610a3c565b60405180910390f35b61009b6004803603810190610096919061086f565b610246565b6040516100a89190610a3c565b60405180910390f35b6100cb60048036038101906100c69190610898565b610689565b6040516100d89190610a3c565b60405180910390f35b6100fb60048036038101906100f69190610898565b6106d1565b6040516101089190610a80565b60405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156101e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d790610ac2565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561028157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461034e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034590610aa2565b60405180910390fd5b60008260405161035d9061077d565b6103679190610a3c565b604051809103906000f080158015610383573d6000803e3d6000fd5b509050806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600083905060018173ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561045057600080fd5b505afa158015610464573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061048d91906108d9565b60405161049a9190610a25565b90815260200160405180910390206000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360028273ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156105b057600080fd5b505afa1580156105c4573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105ed91906108d9565b6040516105fa9190610a25565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f9d42cb017eb05bd8944ab536a8b35bc68085931dd5f4356489801453923953f98483604051610677929190610a57565b60405180910390a18192505050919050565b600060028260405161069b9190610a25565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60606001826040516106e39190610a25565b908152602001604051809103902080548060200260200160405190810160405280929190818152602001828054801561077157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610727575b50505050509050919050565b61140b80610ce783390190565b600061079d61079884610b07565b610ae2565b9050828152602081018484840111156107b557600080fd5b6107c0848285610bca565b509392505050565b60006107db6107d684610b07565b610ae2565b9050828152602081018484840111156107f357600080fd5b6107fe848285610bd9565b509392505050565b60008135905061081581610ccf565b92915050565b600082601f83011261082c57600080fd5b813561083c84826020860161078a565b91505092915050565b600082601f83011261085657600080fd5b81516108668482602086016107c8565b91505092915050565b60006020828403121561088157600080fd5b600061088f84828501610806565b91505092915050565b6000602082840312156108aa57600080fd5b600082013567ffffffffffffffff8111156108c457600080fd5b6108d08482850161081b565b91505092915050565b6000602082840312156108eb57600080fd5b600082015167ffffffffffffffff81111561090557600080fd5b61091184828501610845565b91505092915050565b60006109268383610932565b60208301905092915050565b61093b81610b98565b82525050565b61094a81610b98565b82525050565b600061095b82610b48565b6109658185610b6b565b935061097083610b38565b8060005b838110156109a1578151610988888261091a565b975061099383610b5e565b925050600181019050610974565b5085935050505092915050565b60006109b982610b53565b6109c38185610b8d565b93506109d3818560208601610bd9565b80840191505092915050565b60006109ec601a83610b7c565b91506109f782610c7d565b602082019050919050565b6000610a0f601a83610b7c565b9150610a1a82610ca6565b602082019050919050565b6000610a3182846109ae565b915081905092915050565b6000602082019050610a516000830184610941565b92915050565b6000604082019050610a6c6000830185610941565b610a796020830184610941565b9392505050565b60006020820190508181036000830152610a9a8184610950565b905092915050565b60006020820190508181036000830152610abb816109df565b9050919050565b60006020820190508181036000830152610adb81610a02565b9050919050565b6000610aec610afd565b9050610af88282610c0c565b919050565b6000604051905090565b600067ffffffffffffffff821115610b2257610b21610c3d565b5b610b2b82610c6c565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000610ba382610baa565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610bf7578082015181840152602081019050610bdc565b83811115610c06576000848401525b50505050565b610c1582610c6c565b810181811067ffffffffffffffff82111715610c3457610c33610c3d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f506f6f6c20697320616c726561647920696e69746c69617a6564000000000000600082015250565b7f4e6f2065786368616e676520666f72207468617420746f6b656e000000000000600082015250565b610cd881610b98565b8114610ce357600080fd5b5056fe60806040523480156200001157600080fd5b506040516200140b3803806200140b833981810160405281019062000037919062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200010f565b6000815190506200008f81620000f5565b92915050565b600060208284031215620000a857600080fd5b6000620000b8848285016200007e565b91505092915050565b6000620000ce82620000d5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200010081620000c1565b81146200010c57600080fd5b50565b6112ec806200011f6000396000f3fe6080604052600436106100865760003560e01c8063789770f411610059578063789770f41461016e57806399a40ef31461018c578063b7b0422d146101c9578063b8c876b1146101f9578063d0e30db01461023657610086565b806315770f921461008b5780632071a9f4146100b65780632e1a7d4d146100f357806370b2a30f14610131575b600080fd5b34801561009757600080fd5b506100a0610254565b6040516100ad9190611038565b60405180910390f35b3480156100c257600080fd5b506100dd60048036038101906100d89190610f0d565b61025a565b6040516100ea9190611038565b60405180910390f35b3480156100ff57600080fd5b5061011a60048036038101906101159190610ebb565b6102ce565b604051610128929190611053565b60405180910390f35b34801561013d57600080fd5b5061015860048036038101906101539190610ebb565b610582565b6040516101659190611038565b60405180910390f35b610176610748565b6040516101839190611038565b60405180910390f35b34801561019857600080fd5b506101b360048036038101906101ae9190610ebb565b6108d5565b6040516101c09190611038565b60405180910390f35b6101e360048036038101906101de9190610ebb565b6109d5565b6040516101f09190611038565b60405180910390f35b34801561020557600080fd5b50610220600480360381019061021b9190610e69565b610b2a565b60405161022d9190611038565b60405180910390f35b61023e610b42565b60405161024b9190611038565b60405180910390f35b60015481565b6000806102726103e586610dd390919063ffffffff16565b905060006102898483610dd390919063ffffffff16565b905060006102b4836102a66103e889610dd390919063ffffffff16565b610de990919063ffffffff16565b905080826102c291906110e3565b93505050509392505050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161032d9190610f9d565b60206040518083038186803b15801561034557600080fd5b505afa158015610359573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037d9190610ee4565b905060006001546103974787610dd390919063ffffffff16565b6103a191906110e3565b905060006001546103bb8488610dd390919063ffffffff16565b6103c591906110e3565b905061041982600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610dff90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061047182600154610dff90919063ffffffff16565b6001819055503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156104bd573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610519929190610fef565b602060405180830381600087803b15801561053357600080fd5b505af1158015610547573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056b9190610e92565b61057457600080fd5b818194509450505050915091565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105de9190610f9d565b60206040518083038186803b1580156105f657600080fd5b505afa15801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190610ee4565b9050600061063d84834761025a565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610685573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016106e393929190610fb8565b602060405180830381600087803b1580156106fd57600080fd5b505af1158015610711573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107359190610e92565b61073e57600080fd5b8092505050919050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107a49190610f9d565b60206040518083038186803b1580156107bc57600080fd5b505afa1580156107d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f49190610ee4565b905060006108153461080f3447610dff90919063ffffffff16565b8461025a565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610872929190610fef565b602060405180830381600087803b15801561088c57600080fd5b505af11580156108a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c49190610e92565b6108cd57600080fd5b809250505090565b6000806108eb8347610dff90919063ffffffff16565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109499190610f9d565b60206040518083038186803b15801561096157600080fd5b505afa158015610975573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109999190610ee4565b90506109cc6001836109b48488610dd390919063ffffffff16565b6109be91906110e3565b610de990919063ffffffff16565b92505050919050565b60008060015414610a1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1290611018565b60405180910390fd5b47600181905550600154600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610ac593929190610fb8565b602060405180830381600087803b158015610adf57600080fd5b505af1158015610af3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b179190610e92565b610b2057600080fd5b6001549050919050565b60026020528060005260406000206000915090505481565b600080610b583447610dff90919063ffffffff16565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610bb69190610f9d565b60206040518083038186803b158015610bce57600080fd5b505afa158015610be2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c069190610ee4565b90506000610c3b600184610c238534610dd390919063ffffffff16565b610c2d91906110e3565b610de990919063ffffffff16565b9050600083610c5560015434610dd390919063ffffffff16565b610c5f91906110e3565b9050610cb381600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610de990919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d0b81600154610de990919063ffffffff16565b60018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610d6e93929190610fb8565b602060405180830381600087803b158015610d8857600080fd5b505af1158015610d9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc09190610e92565b610dc957600080fd5b8094505050505090565b60008183610de19190611114565b905092915050565b60008183610df7919061108d565b905092915050565b60008183610e0d919061116e565b905092915050565b600081359050610e2481611271565b92915050565b600081519050610e3981611288565b92915050565b600081359050610e4e8161129f565b92915050565b600081519050610e638161129f565b92915050565b600060208284031215610e7b57600080fd5b6000610e8984828501610e15565b91505092915050565b600060208284031215610ea457600080fd5b6000610eb284828501610e2a565b91505092915050565b600060208284031215610ecd57600080fd5b6000610edb84828501610e3f565b91505092915050565b600060208284031215610ef657600080fd5b6000610f0484828501610e54565b91505092915050565b600080600060608486031215610f2257600080fd5b6000610f3086828701610e3f565b9350506020610f4186828701610e3f565b9250506040610f5286828701610e3f565b9150509250925092565b610f65816111a2565b82525050565b6000610f78601b8361107c565b9150610f8382611248565b602082019050919050565b610f97816111e0565b82525050565b6000602082019050610fb26000830184610f5c565b92915050565b6000606082019050610fcd6000830186610f5c565b610fda6020830185610f5c565b610fe76040830184610f8e565b949350505050565b60006040820190506110046000830185610f5c565b6110116020830184610f8e565b9392505050565b6000602082019050818103600083015261103181610f6b565b9050919050565b600060208201905061104d6000830184610f8e565b92915050565b60006040820190506110686000830185610f8e565b6110756020830184610f8e565b9392505050565b600082825260208201905092915050565b6000611098826111e0565b91506110a3836111e0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110d8576110d76111ea565b5b828201905092915050565b60006110ee826111e0565b91506110f9836111e0565b92508261110957611108611219565b5b828204905092915050565b600061111f826111e0565b915061112a836111e0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611163576111626111ea565b5b828202905092915050565b6000611179826111e0565b9150611184836111e0565b925082821015611197576111966111ea565b5b828203905092915050565b60006111ad826111c0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f20706f6f6c20616c726561647920686173206c69717569646974790000000000600082015250565b61127a816111a2565b811461128557600080fd5b50565b611291816111b4565b811461129c57600080fd5b50565b6112a8816111e0565b81146112b357600080fd5b5056fea26469706673582212207b2d42f8326a8edf8d14a3eae7d35ca226c9b8e4447bfb94b68121be4e338b8c64736f6c63430008040033a2646970667358221220fb94a48672bbb7bd197e7bf9be398ebb0c66a561a909b3fdeb0493dfed978a9164736f6c63430008040033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "125:1210:2:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "125:1210:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:175;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;348:519;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1202:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1060:134;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;877:175;933:7;982:1;960:24;;:5;:12;966:5;960:12;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;;952:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1032:5;:12;1038:5;1032:12;;;;;;;;;;;;;;;;;;;;;;;;;1025:19;;877:175;;;:::o;348:519::-;403:7;447:1;430:19;;:5;:19;;;;422:28;;;;;;493:1;469:26;;:5;:12;475:5;469:12;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;461:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;537:7;555:5;547:14;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;537:24;;593:3;572:5;:12;578:5;572:12;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;608:28;654:5;608:52;;671:11;683:13;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;671:35;;;;;;:::i;:::-;;;;;;;;;;;;;712:5;:12;718:5;712:12;;;;;;;;;;;;;;;;;;;;;;;;;671:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:5;736:13;750;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;736:37;;;;;;:::i;:::-;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;797:32;809:5;824:3;797:32;;;;;;;:::i;:::-;;;;;;;;855:3;840:19;;;;348:519;;;:::o;1202:128::-;1275:7;1301:13;1315:6;1301:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1294:28;;1202:128;;;:::o;1060:134::-;1132:16;1167:11;1179:6;1167:19;;;;;;:::i;:::-;;;;;;;;;;;;;1160:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1060:134;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:345:20:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;292:1;289;282:12;251:2;305:41;339:6;334:3;329;305:41;:::i;:::-;91:261;;;;;;:::o;358:354::-;447:5;472:66;488:49;530:6;488:49;:::i;:::-;472:66;:::i;:::-;463:75;;561:6;554:5;547:21;599:4;592:5;588:16;637:3;628:6;623:3;619:16;616:25;613:2;;;654:1;651;644:12;613:2;667:39;699:6;694:3;689;667:39;:::i;:::-;453:259;;;;;;:::o;718:139::-;764:5;802:6;789:20;780:29;;818:33;845:5;818:33;:::i;:::-;770:87;;;;:::o;877:273::-;933:5;982:3;975:4;967:6;963:17;959:27;949:2;;1000:1;997;990:12;949:2;1040:6;1027:20;1065:79;1140:3;1132:6;1125:4;1117:6;1113:17;1065:79;:::i;:::-;1056:88;;939:211;;;;;:::o;1170:288::-;1237:5;1286:3;1279:4;1271:6;1267:17;1263:27;1253:2;;1304:1;1301;1294:12;1253:2;1337:6;1331:13;1362:90;1448:3;1440:6;1433:4;1425:6;1421:17;1362:90;:::i;:::-;1353:99;;1243:215;;;;;:::o;1464:262::-;1523:6;1572:2;1560:9;1551:7;1547:23;1543:32;1540:2;;;1588:1;1585;1578:12;1540:2;1631:1;1656:53;1701:7;1692:6;1681:9;1677:22;1656:53;:::i;:::-;1646:63;;1602:117;1530:196;;;;:::o;1732:375::-;1801:6;1850:2;1838:9;1829:7;1825:23;1821:32;1818:2;;;1866:1;1863;1856:12;1818:2;1937:1;1926:9;1922:17;1909:31;1967:18;1959:6;1956:30;1953:2;;;1999:1;1996;1989:12;1953:2;2027:63;2082:7;2073:6;2062:9;2058:22;2027:63;:::i;:::-;2017:73;;1880:220;1808:299;;;;:::o;2113:390::-;2193:6;2242:2;2230:9;2221:7;2217:23;2213:32;2210:2;;;2258:1;2255;2248:12;2210:2;2322:1;2311:9;2307:17;2301:24;2352:18;2344:6;2341:30;2338:2;;;2384:1;2381;2374:12;2338:2;2412:74;2478:7;2469:6;2458:9;2454:22;2412:74;:::i;:::-;2402:84;;2272:224;2200:303;;;;:::o;2509:179::-;2578:10;2599:46;2641:3;2633:6;2599:46;:::i;:::-;2677:4;2672:3;2668:14;2654:28;;2589:99;;;;:::o;2694:108::-;2771:24;2789:5;2771:24;:::i;:::-;2766:3;2759:37;2749:53;;:::o;2808:118::-;2895:24;2913:5;2895:24;:::i;:::-;2890:3;2883:37;2873:53;;:::o;2962:732::-;3081:3;3110:54;3158:5;3110:54;:::i;:::-;3180:86;3259:6;3254:3;3180:86;:::i;:::-;3173:93;;3290:56;3340:5;3290:56;:::i;:::-;3369:7;3400:1;3385:284;3410:6;3407:1;3404:13;3385:284;;;3486:6;3480:13;3513:63;3572:3;3557:13;3513:63;:::i;:::-;3506:70;;3599:60;3652:6;3599:60;:::i;:::-;3589:70;;3445:224;3432:1;3429;3425:9;3420:14;;3385:284;;;3389:14;3685:3;3678:10;;3086:608;;;;;;;:::o;3700:377::-;3806:3;3834:39;3867:5;3834:39;:::i;:::-;3889:89;3971:6;3966:3;3889:89;:::i;:::-;3882:96;;3987:52;4032:6;4027:3;4020:4;4013:5;4009:16;3987:52;:::i;:::-;4064:6;4059:3;4055:16;4048:23;;3810:267;;;;;:::o;4083:366::-;4225:3;4246:67;4310:2;4305:3;4246:67;:::i;:::-;4239:74;;4322:93;4411:3;4322:93;:::i;:::-;4440:2;4435:3;4431:12;4424:19;;4229:220;;;:::o;4455:366::-;4597:3;4618:67;4682:2;4677:3;4618:67;:::i;:::-;4611:74;;4694:93;4783:3;4694:93;:::i;:::-;4812:2;4807:3;4803:12;4796:19;;4601:220;;;:::o;4827:275::-;4959:3;4981:95;5072:3;5063:6;4981:95;:::i;:::-;4974:102;;5093:3;5086:10;;4963:139;;;;:::o;5108:222::-;5201:4;5239:2;5228:9;5224:18;5216:26;;5252:71;5320:1;5309:9;5305:17;5296:6;5252:71;:::i;:::-;5206:124;;;;:::o;5336:332::-;5457:4;5495:2;5484:9;5480:18;5472:26;;5508:71;5576:1;5565:9;5561:17;5552:6;5508:71;:::i;:::-;5589:72;5657:2;5646:9;5642:18;5633:6;5589:72;:::i;:::-;5462:206;;;;;:::o;5674:373::-;5817:4;5855:2;5844:9;5840:18;5832:26;;5904:9;5898:4;5894:20;5890:1;5879:9;5875:17;5868:47;5932:108;6035:4;6026:6;5932:108;:::i;:::-;5924:116;;5822:225;;;;:::o;6053:419::-;6219:4;6257:2;6246:9;6242:18;6234:26;;6306:9;6300:4;6296:20;6292:1;6281:9;6277:17;6270:47;6334:131;6460:4;6334:131;:::i;:::-;6326:139;;6224:248;;;:::o;6478:419::-;6644:4;6682:2;6671:9;6667:18;6659:26;;6731:9;6725:4;6721:20;6717:1;6706:9;6702:17;6695:47;6759:131;6885:4;6759:131;:::i;:::-;6751:139;;6649:248;;;:::o;6903:129::-;6937:6;6964:20;;:::i;:::-;6954:30;;6993:33;7021:4;7013:6;6993:33;:::i;:::-;6944:88;;;:::o;7038:75::-;7071:6;7104:2;7098:9;7088:19;;7078:35;:::o;7119:308::-;7181:4;7271:18;7263:6;7260:30;7257:2;;;7293:18;;:::i;:::-;7257:2;7331:29;7353:6;7331:29;:::i;:::-;7323:37;;7415:4;7409;7405:15;7397:23;;7186:241;;;:::o;7433:132::-;7500:4;7523:3;7515:11;;7553:4;7548:3;7544:14;7536:22;;7505:60;;;:::o;7571:114::-;7638:6;7672:5;7666:12;7656:22;;7645:40;;;:::o;7691:99::-;7743:6;7777:5;7771:12;7761:22;;7750:40;;;:::o;7796:113::-;7866:4;7898;7893:3;7889:14;7881:22;;7871:38;;;:::o;7915:184::-;8014:11;8048:6;8043:3;8036:19;8088:4;8083:3;8079:14;8064:29;;8026:73;;;;:::o;8105:169::-;8189:11;8223:6;8218:3;8211:19;8263:4;8258:3;8254:14;8239:29;;8201:73;;;;:::o;8280:148::-;8382:11;8419:3;8404:18;;8394:34;;;;:::o;8434:96::-;8471:7;8500:24;8518:5;8500:24;:::i;:::-;8489:35;;8479:51;;;:::o;8536:126::-;8573:7;8613:42;8606:5;8602:54;8591:65;;8581:81;;;:::o;8668:154::-;8752:6;8747:3;8742;8729:30;8814:1;8805:6;8800:3;8796:16;8789:27;8719:103;;;:::o;8828:307::-;8896:1;8906:113;8920:6;8917:1;8914:13;8906:113;;;9005:1;9000:3;8996:11;8990:18;8986:1;8981:3;8977:11;8970:39;8942:2;8939:1;8935:10;8930:15;;8906:113;;;9037:6;9034:1;9031:13;9028:2;;;9117:1;9108:6;9103:3;9099:16;9092:27;9028:2;8877:258;;;;:::o;9141:281::-;9224:27;9246:4;9224:27;:::i;:::-;9216:6;9212:40;9354:6;9342:10;9339:22;9318:18;9306:10;9303:34;9300:62;9297:2;;;9365:18;;:::i;:::-;9297:2;9405:10;9401:2;9394:22;9184:238;;;:::o;9428:180::-;9476:77;9473:1;9466:88;9573:4;9570:1;9563:15;9597:4;9594:1;9587:15;9614:102;9655:6;9706:2;9702:7;9697:2;9690:5;9686:14;9682:28;9672:38;;9662:54;;;:::o;9722:176::-;9862:28;9858:1;9850:6;9846:14;9839:52;9828:70;:::o;9904:176::-;10044:28;10040:1;10032:6;10028:14;10021:52;10010:70;:::o;10086:122::-;10159:24;10177:5;10159:24;:::i;:::-;10152:5;10149:35;10139:2;;10198:1;10195;10188:12;10139:2;10129:79;:::o",
  "source": "pragma solidity ^0.8.0;\r\nimport \"./DEX.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\r\n\r\ncontract Factory {\r\n\r\n    mapping(address => address) pools;\r\n    mapping(string => address[]) tickerPools;\r\n    mapping(string => address) tickerAddress;\r\n\r\n    event NewExchange(address token, address exchange);\r\n\r\n\r\n    function createExchange(address token) public returns (address){\r\n        require(token != address(0));\r\n        require(pools[token] == address(0), \"Pool is already initliazed\");\r\n        DEX dex = new DEX(token);\r\n        pools[token]=address(dex);\r\n        IERC20Metadata tokenMetadata = IERC20Metadata(token);\r\n        tickerPools[tokenMetadata.symbol()].push(pools[token]);\r\n        tickerAddress[tokenMetadata.symbol()] = token;\r\n        emit NewExchange(token, address(dex));\r\n        return address(dex);\r\n    }\r\n\r\n\r\n    function getExchange(address token) public view returns(address){\r\n        require(pools[token]!=address(0),\"No exchange for that token\");\r\n        return pools[token];\r\n    }\r\n\r\n    function getExchangesByTicker(string memory ticker) public view returns(address[] memory){\r\n        return tickerPools[ticker];\r\n    }\r\n\r\n    function getTickerTokenAddress(string memory ticker) public view returns(address){\r\n        return tickerAddress[ticker];\r\n    }\r\n\r\n}",
  "sourcePath": "C:/Ethereum/dex/contracts/Factory.sol",
  "ast": {
    "absolutePath": "/C/Ethereum/dex/contracts/Factory.sol",
    "exportedSymbols": {
      "DEX": [
        431
      ],
      "Factory": [
        610
      ],
      "IDEX": [
        657
      ],
      "IERC20": [
        1912
      ],
      "IERC20Metadata": [
        2035
      ],
      "SafeMath": [
        2745
      ]
    },
    "id": 611,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 453,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/C/Ethereum/dex/contracts/DEX.sol",
        "file": "./DEX.sol",
        "id": 454,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 611,
        "sourceUnit": 432,
        "src": "25:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "id": 455,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 611,
        "sourceUnit": 2036,
        "src": "46:75:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          431
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 610,
        "linearizedBaseContracts": [
          610
        ],
        "name": "Factory",
        "nameLocation": "134:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 459,
            "mutability": "mutable",
            "name": "pools",
            "nameLocation": "179:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "151:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 458,
              "keyType": {
                "id": 456,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "159:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "151:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 457,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "170:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 464,
            "mutability": "mutable",
            "name": "tickerPools",
            "nameLocation": "220:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "191:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(string => address[])"
            },
            "typeName": {
              "id": 463,
              "keyType": {
                "id": 460,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "199:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "191:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(string => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 461,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "209:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 462,
                "nodeType": "ArrayTypeName",
                "src": "209:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 468,
            "mutability": "mutable",
            "name": "tickerAddress",
            "nameLocation": "265:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "238:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 467,
              "keyType": {
                "id": 465,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "246:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "238:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 466,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "256:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 474,
            "name": "NewExchange",
            "nameLocation": "293:11:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "313:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 474,
                  "src": "305:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 472,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "exchange",
                  "nameLocation": "328:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 474,
                  "src": "320:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "320:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "304:33:2"
            },
            "src": "287:51:2"
          },
          {
            "body": {
              "id": 559,
              "nodeType": "Block",
              "src": "411:456:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 482,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 476,
                          "src": "430:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "447:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "439:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 483,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "439:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "439:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "430:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 481,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "422:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "422:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "422:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 491,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "469:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 493,
                          "indexExpression": {
                            "id": 492,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 476,
                            "src": "475:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "469:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "493:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "485:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 494,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "485:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "485:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "469:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c20697320616c726561647920696e69746c69617a6564",
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "497:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a44f77f0b938ebe9e22d7a83670abd4f49655ed9f2ca8aee68106b0d73c75e77",
                          "typeString": "literal_string \"Pool is already initliazed\""
                        },
                        "value": "Pool is already initliazed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a44f77f0b938ebe9e22d7a83670abd4f49655ed9f2ca8aee68106b0d73c75e77",
                          "typeString": "literal_string \"Pool is already initliazed\""
                        }
                      ],
                      "id": 490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "461:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "461:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "461:65:2"
                },
                {
                  "assignments": [
                    504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 504,
                      "mutability": "mutable",
                      "name": "dex",
                      "nameLocation": "541:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 559,
                      "src": "537:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DEX_$431",
                        "typeString": "contract DEX"
                      },
                      "typeName": {
                        "id": 503,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 502,
                          "name": "DEX",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 431,
                          "src": "537:3:2"
                        },
                        "referencedDeclaration": 431,
                        "src": "537:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$431",
                          "typeString": "contract DEX"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 510,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 508,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "555:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "547:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_DEX_$431_$",
                        "typeString": "function (address) returns (contract DEX)"
                      },
                      "typeName": {
                        "id": 506,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 505,
                          "name": "DEX",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 431,
                          "src": "551:3:2"
                        },
                        "referencedDeclaration": 431,
                        "src": "551:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$431",
                          "typeString": "contract DEX"
                        }
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "547:14:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DEX_$431",
                      "typeString": "contract DEX"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "537:24:2"
                },
                {
                  "expression": {
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 511,
                        "name": "pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 459,
                        "src": "572:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 513,
                      "indexExpression": {
                        "id": 512,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "578:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "572:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 516,
                          "name": "dex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 504,
                          "src": "593:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DEX_$431",
                            "typeString": "contract DEX"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DEX_$431",
                            "typeString": "contract DEX"
                          }
                        ],
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "585:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 514,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "585:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "585:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "572:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "572:25:2"
                },
                {
                  "assignments": [
                    522
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 522,
                      "mutability": "mutable",
                      "name": "tokenMetadata",
                      "nameLocation": "623:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 559,
                      "src": "608:28:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Metadata_$2035",
                        "typeString": "contract IERC20Metadata"
                      },
                      "typeName": {
                        "id": 521,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 520,
                          "name": "IERC20Metadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2035,
                          "src": "608:14:2"
                        },
                        "referencedDeclaration": 2035,
                        "src": "608:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$2035",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 526,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 524,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "654:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 523,
                      "name": "IERC20Metadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2035,
                      "src": "639:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$2035_$",
                        "typeString": "type(contract IERC20Metadata)"
                      }
                    },
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "639:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Metadata_$2035",
                      "typeString": "contract IERC20Metadata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "608:52:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 533,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 459,
                          "src": "712:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 535,
                        "indexExpression": {
                          "id": 534,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 476,
                          "src": "718:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "712:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 527,
                          "name": "tickerPools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 464,
                          "src": "671:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(string memory => address[] storage ref)"
                          }
                        },
                        "id": 531,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 528,
                              "name": "tokenMetadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "683:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Metadata_$2035",
                                "typeString": "contract IERC20Metadata"
                              }
                            },
                            "id": 529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "symbol",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2028,
                            "src": "683:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                              "typeString": "function () view external returns (string memory)"
                            }
                          },
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "683:22:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "671:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "671:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "671:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "671:54:2"
                },
                {
                  "expression": {
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 538,
                        "name": "tickerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "736:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 542,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 539,
                            "name": "tokenMetadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 522,
                            "src": "750:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Metadata_$2035",
                              "typeString": "contract IERC20Metadata"
                            }
                          },
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2028,
                          "src": "750:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "750:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "736:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 543,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 476,
                      "src": "776:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "736:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "736:45:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 547,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "809:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 550,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 504,
                            "src": "824:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$431",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$431",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "816:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 548,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "816:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "816:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 546,
                      "name": "NewExchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 474,
                      "src": "797:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "797:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "EmitStatement",
                  "src": "792:37:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 556,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "855:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$431",
                          "typeString": "contract DEX"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DEX_$431",
                          "typeString": "contract DEX"
                        }
                      ],
                      "id": 555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "847:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 554,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "847:7:2",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "847:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 480,
                  "id": 558,
                  "nodeType": "Return",
                  "src": "840:19:2"
                }
              ]
            },
            "functionSelector": "1648f38e",
            "id": 560,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createExchange",
            "nameLocation": "357:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 476,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "380:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "372:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "371:15:2"
            },
            "returnParameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 479,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "403:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "402:9:2"
            },
            "scope": 610,
            "src": "348:519:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "941:111:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 568,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "960:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 570,
                          "indexExpression": {
                            "id": 569,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 562,
                            "src": "966:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "960:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "982:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "974:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 571,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "974:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "974:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "960:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2065786368616e676520666f72207468617420746f6b656e",
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "985:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5fc7e3b6eebd1a3e123540a175bd5226b244cabccf27ac86f473f7661a1cfbe",
                          "typeString": "literal_string \"No exchange for that token\""
                        },
                        "value": "No exchange for that token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5fc7e3b6eebd1a3e123540a175bd5226b244cabccf27ac86f473f7661a1cfbe",
                          "typeString": "literal_string \"No exchange for that token\""
                        }
                      ],
                      "id": 567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "952:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "952:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 578,
                  "nodeType": "ExpressionStatement",
                  "src": "952:62:2"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 579,
                      "name": "pools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 459,
                      "src": "1032:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 581,
                    "indexExpression": {
                      "id": 580,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 562,
                      "src": "1038:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1032:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 566,
                  "id": 582,
                  "nodeType": "Return",
                  "src": "1025:19:2"
                }
              ]
            },
            "functionSelector": "06f2bf62",
            "id": 584,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchange",
            "nameLocation": "886:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 562,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "906:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "898:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "898:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "897:15:2"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 565,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "933:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "933:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "932:9:2"
            },
            "scope": 610,
            "src": "877:175:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 596,
              "nodeType": "Block",
              "src": "1149:45:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 592,
                      "name": "tickerPools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 464,
                      "src": "1167:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(string memory => address[] storage ref)"
                      }
                    },
                    "id": 594,
                    "indexExpression": {
                      "id": 593,
                      "name": "ticker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 586,
                      "src": "1179:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1167:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 591,
                  "id": 595,
                  "nodeType": "Return",
                  "src": "1160:26:2"
                }
              ]
            },
            "functionSelector": "93bffd8e",
            "id": 597,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangesByTicker",
            "nameLocation": "1069:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 586,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nameLocation": "1104:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "1090:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1089:22:2"
            },
            "returnParameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "1132:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 588,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1132:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 589,
                    "nodeType": "ArrayTypeName",
                    "src": "1132:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1131:18:2"
            },
            "scope": 610,
            "src": "1060:134:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 608,
              "nodeType": "Block",
              "src": "1283:47:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 604,
                      "name": "tickerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 468,
                      "src": "1301:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 606,
                    "indexExpression": {
                      "id": 605,
                      "name": "ticker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 599,
                      "src": "1315:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1301:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 603,
                  "id": 607,
                  "nodeType": "Return",
                  "src": "1294:28:2"
                }
              ]
            },
            "functionSelector": "1dae17e5",
            "id": 609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTickerTokenAddress",
            "nameLocation": "1211:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nameLocation": "1247:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "1233:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1233:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1232:22:2"
            },
            "returnParameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 602,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "1275:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1274:9:2"
            },
            "scope": 610,
            "src": "1202:128:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 611,
        "src": "125:1210:2",
        "usedErrors": []
      }
    ],
    "src": "0:1335:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Ethereum/dex/contracts/Factory.sol",
    "exportedSymbols": {
      "DEX": [
        431
      ],
      "Factory": [
        610
      ],
      "IDEX": [
        657
      ],
      "IERC20": [
        1912
      ],
      "IERC20Metadata": [
        2035
      ],
      "SafeMath": [
        2745
      ]
    },
    "id": 611,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 453,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/C/Ethereum/dex/contracts/DEX.sol",
        "file": "./DEX.sol",
        "id": 454,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 611,
        "sourceUnit": 432,
        "src": "25:19:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "id": 455,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 611,
        "sourceUnit": 2036,
        "src": "46:75:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          431
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 610,
        "linearizedBaseContracts": [
          610
        ],
        "name": "Factory",
        "nameLocation": "134:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 459,
            "mutability": "mutable",
            "name": "pools",
            "nameLocation": "179:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "151:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 458,
              "keyType": {
                "id": 456,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "159:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "151:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 457,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "170:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 464,
            "mutability": "mutable",
            "name": "tickerPools",
            "nameLocation": "220:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "191:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(string => address[])"
            },
            "typeName": {
              "id": 463,
              "keyType": {
                "id": 460,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "199:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "191:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(string => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 461,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "209:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 462,
                "nodeType": "ArrayTypeName",
                "src": "209:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 468,
            "mutability": "mutable",
            "name": "tickerAddress",
            "nameLocation": "265:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 610,
            "src": "238:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 467,
              "keyType": {
                "id": 465,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "246:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "238:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 466,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "256:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 474,
            "name": "NewExchange",
            "nameLocation": "293:11:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "313:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 474,
                  "src": "305:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 472,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "exchange",
                  "nameLocation": "328:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 474,
                  "src": "320:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "320:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "304:33:2"
            },
            "src": "287:51:2"
          },
          {
            "body": {
              "id": 559,
              "nodeType": "Block",
              "src": "411:456:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 482,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 476,
                          "src": "430:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "447:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "439:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 483,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "439:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "439:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "430:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 481,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "422:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "422:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "422:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 491,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "469:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 493,
                          "indexExpression": {
                            "id": 492,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 476,
                            "src": "475:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "469:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "493:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "485:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 494,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "485:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "485:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "469:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6f6c20697320616c726561647920696e69746c69617a6564",
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "497:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a44f77f0b938ebe9e22d7a83670abd4f49655ed9f2ca8aee68106b0d73c75e77",
                          "typeString": "literal_string \"Pool is already initliazed\""
                        },
                        "value": "Pool is already initliazed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a44f77f0b938ebe9e22d7a83670abd4f49655ed9f2ca8aee68106b0d73c75e77",
                          "typeString": "literal_string \"Pool is already initliazed\""
                        }
                      ],
                      "id": 490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "461:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "461:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "461:65:2"
                },
                {
                  "assignments": [
                    504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 504,
                      "mutability": "mutable",
                      "name": "dex",
                      "nameLocation": "541:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 559,
                      "src": "537:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DEX_$431",
                        "typeString": "contract DEX"
                      },
                      "typeName": {
                        "id": 503,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 502,
                          "name": "DEX",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 431,
                          "src": "537:3:2"
                        },
                        "referencedDeclaration": 431,
                        "src": "537:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$431",
                          "typeString": "contract DEX"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 510,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 508,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "555:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "547:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_DEX_$431_$",
                        "typeString": "function (address) returns (contract DEX)"
                      },
                      "typeName": {
                        "id": 506,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 505,
                          "name": "DEX",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 431,
                          "src": "551:3:2"
                        },
                        "referencedDeclaration": 431,
                        "src": "551:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$431",
                          "typeString": "contract DEX"
                        }
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "547:14:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DEX_$431",
                      "typeString": "contract DEX"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "537:24:2"
                },
                {
                  "expression": {
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 511,
                        "name": "pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 459,
                        "src": "572:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 513,
                      "indexExpression": {
                        "id": 512,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "578:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "572:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 516,
                          "name": "dex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 504,
                          "src": "593:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DEX_$431",
                            "typeString": "contract DEX"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DEX_$431",
                            "typeString": "contract DEX"
                          }
                        ],
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "585:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 514,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "585:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "585:12:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "572:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "572:25:2"
                },
                {
                  "assignments": [
                    522
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 522,
                      "mutability": "mutable",
                      "name": "tokenMetadata",
                      "nameLocation": "623:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 559,
                      "src": "608:28:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Metadata_$2035",
                        "typeString": "contract IERC20Metadata"
                      },
                      "typeName": {
                        "id": 521,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 520,
                          "name": "IERC20Metadata",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2035,
                          "src": "608:14:2"
                        },
                        "referencedDeclaration": 2035,
                        "src": "608:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$2035",
                          "typeString": "contract IERC20Metadata"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 526,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 524,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "654:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 523,
                      "name": "IERC20Metadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2035,
                      "src": "639:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$2035_$",
                        "typeString": "type(contract IERC20Metadata)"
                      }
                    },
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "639:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Metadata_$2035",
                      "typeString": "contract IERC20Metadata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "608:52:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 533,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 459,
                          "src": "712:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 535,
                        "indexExpression": {
                          "id": 534,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 476,
                          "src": "718:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "712:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 527,
                          "name": "tickerPools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 464,
                          "src": "671:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(string memory => address[] storage ref)"
                          }
                        },
                        "id": 531,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 528,
                              "name": "tokenMetadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "683:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Metadata_$2035",
                                "typeString": "contract IERC20Metadata"
                              }
                            },
                            "id": 529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "symbol",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2028,
                            "src": "683:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                              "typeString": "function () view external returns (string memory)"
                            }
                          },
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "683:22:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "671:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "671:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "671:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "671:54:2"
                },
                {
                  "expression": {
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 538,
                        "name": "tickerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "736:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 542,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 539,
                            "name": "tokenMetadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 522,
                            "src": "750:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Metadata_$2035",
                              "typeString": "contract IERC20Metadata"
                            }
                          },
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2028,
                          "src": "750:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "750:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "736:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 543,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 476,
                      "src": "776:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "736:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "736:45:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 547,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "809:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 550,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 504,
                            "src": "824:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$431",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$431",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "816:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 548,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "816:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "816:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 546,
                      "name": "NewExchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 474,
                      "src": "797:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "797:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "EmitStatement",
                  "src": "792:37:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 556,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "855:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$431",
                          "typeString": "contract DEX"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DEX_$431",
                          "typeString": "contract DEX"
                        }
                      ],
                      "id": 555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "847:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 554,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "847:7:2",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "847:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 480,
                  "id": 558,
                  "nodeType": "Return",
                  "src": "840:19:2"
                }
              ]
            },
            "functionSelector": "1648f38e",
            "id": 560,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createExchange",
            "nameLocation": "357:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 476,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "380:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "372:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "371:15:2"
            },
            "returnParameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 479,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 560,
                  "src": "403:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "402:9:2"
            },
            "scope": 610,
            "src": "348:519:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "941:111:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 568,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "960:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 570,
                          "indexExpression": {
                            "id": 569,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 562,
                            "src": "966:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "960:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "982:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "974:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 571,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "974:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "974:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "960:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2065786368616e676520666f72207468617420746f6b656e",
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "985:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5fc7e3b6eebd1a3e123540a175bd5226b244cabccf27ac86f473f7661a1cfbe",
                          "typeString": "literal_string \"No exchange for that token\""
                        },
                        "value": "No exchange for that token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5fc7e3b6eebd1a3e123540a175bd5226b244cabccf27ac86f473f7661a1cfbe",
                          "typeString": "literal_string \"No exchange for that token\""
                        }
                      ],
                      "id": 567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "952:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "952:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 578,
                  "nodeType": "ExpressionStatement",
                  "src": "952:62:2"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 579,
                      "name": "pools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 459,
                      "src": "1032:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 581,
                    "indexExpression": {
                      "id": 580,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 562,
                      "src": "1038:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1032:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 566,
                  "id": 582,
                  "nodeType": "Return",
                  "src": "1025:19:2"
                }
              ]
            },
            "functionSelector": "06f2bf62",
            "id": 584,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchange",
            "nameLocation": "886:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 562,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "906:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "898:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "898:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "897:15:2"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 565,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "933:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "933:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "932:9:2"
            },
            "scope": 610,
            "src": "877:175:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 596,
              "nodeType": "Block",
              "src": "1149:45:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 592,
                      "name": "tickerPools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 464,
                      "src": "1167:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(string memory => address[] storage ref)"
                      }
                    },
                    "id": 594,
                    "indexExpression": {
                      "id": 593,
                      "name": "ticker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 586,
                      "src": "1179:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1167:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 591,
                  "id": 595,
                  "nodeType": "Return",
                  "src": "1160:26:2"
                }
              ]
            },
            "functionSelector": "93bffd8e",
            "id": 597,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangesByTicker",
            "nameLocation": "1069:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 586,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nameLocation": "1104:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "1090:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1090:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1089:22:2"
            },
            "returnParameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 597,
                  "src": "1132:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 588,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1132:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 589,
                    "nodeType": "ArrayTypeName",
                    "src": "1132:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1131:18:2"
            },
            "scope": 610,
            "src": "1060:134:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 608,
              "nodeType": "Block",
              "src": "1283:47:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 604,
                      "name": "tickerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 468,
                      "src": "1301:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 606,
                    "indexExpression": {
                      "id": 605,
                      "name": "ticker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 599,
                      "src": "1315:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1301:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 603,
                  "id": 607,
                  "nodeType": "Return",
                  "src": "1294:28:2"
                }
              ]
            },
            "functionSelector": "1dae17e5",
            "id": 609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTickerTokenAddress",
            "nameLocation": "1211:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nameLocation": "1247:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "1233:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1233:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1232:22:2"
            },
            "returnParameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 602,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "1275:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1274:9:2"
            },
            "scope": 610,
            "src": "1202:128:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 611,
        "src": "125:1210:2",
        "usedErrors": []
      }
    ],
    "src": "0:1335:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x9d42cb017eb05bd8944ab536a8b35bc68085931dd5f4356489801453923953f9": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "exchange",
              "type": "address"
            }
          ],
          "name": "NewExchange",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xA1c418936EFA61297d03e11D8671Dd87bed20CFc",
      "transactionHash": "0x66f9c20e3d64cb3b126b14c1f5f30530b9058bef132de3a0afc112707fca98b9"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-07-08T09:36:37.538Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}